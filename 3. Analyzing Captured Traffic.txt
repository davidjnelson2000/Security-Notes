Analyzing Captured Traffic

PROTOCOL - Set of rules that governs the communication between systems. Determines how information is 
laid out in a packet

When searching for a website it uses the Domain Name System (DNS) protocol to communicate with the 
DNS Server:

1. Starts by sending a DNS Query Requesting the IP of the website (https://cs.virginia.edu/).
2. DNS server will then respond with the IP address.

Example: Kali asks Google DNS and then Google DNS tells Kali the IP

HEADER FIELDS in a packet tell you who it is from and where it is going.
These header fields contain ip addresses and source and destination port numbers.

Port numbers on a machine are all unique and no two processes on one machine can be the same.

PROCESS - abstraction that represents a running program. When a process wants to send or receive
information through the network, the operating system assigns that process a port number

Example: Packets for a web server arrive at your ip address on port 443

PORTS - Expose internal processes to the network. Allow multiple processes on you computer to 
communicate with the internet at the same time.

When your operating system receives a packet it examines the port number to decide whether the
packet is for the browser or messenger. Ports open up oppurtunities for attacks. Attackers can
scan machines for open ports. When a machine has open ports they will try to infect the machine
with malicious packets.

FIVE-LAYER INTERNET PROTOCOL STACK

Application -> Transport -> Network -> Data -> Physical ------->sent
Physical -> Data -> Network -> Transport -> Application

Each layer is responsible for managing the communication between specific components in the network.
The layers are independent and its actions are not effected by other layers.

ENCAPSULATION - Protocol stack that ensures they are independent and treat layers above as generic data.

Example:
a. Composing and sending an email (Happens in the application layer)
b. The message associated with the email are then placed in transport packets, but does not read or alter the email in any way. It labels the packets (Transport Layer)
c. Then goes to the network layer packets, then data layer packets, and is finally transmitted.
NOTE: Each layer makes decisions without depending on the information from a previous layer.

APPLICATION LAYER - Responsible for communication between applications. (example: Firefox and the University of Virginia Web Servers)

Application layer protocols:
hyper text transfer protocol (HTTP) [Sends web pages to browsers]
file transfer protocol (FTP) [Uploads files to a Server]
domain name system (DNS) 
TELEtype NETwork (Telnet)
Simple mail transfer protocol (SMTP)

TRANSPORT LAYER - Responsible for managing communication between processes communicating over the internet.

Transport layer protocols:
transmission control protocol (TCP) [Provides a guarentee that packets reach their destination]
user datagram protocol (UDP) [Less complex and provides no guarentees it arrives]

NETWORK LAYER - Responsible for controlling how packets flow between routers in the network. IP addresses are implemented at this layer.

You can see every route that your packets pass through by using the [traceroute] tool

Network layer protocols:
internet control message protocol (ICMP) [traceroute uses ICMP to construct packets that probe the network to learn the path the packet takes] 

Example: traceroute www.virinia.edu

The command probes each router with three packets and then records the time it takes for each packet to reach the router.

DATA LINK LAYER - Responsible for communication between NICs. It also detects errors that might have occurred during transmission. 
(Example: wifi signal may become corrupted during transmission due to interference)
from other radio signals.

Data link layer protocol:
media access control (MAC) [Responsible for sharing the transmission medium (example - radio spectrum or wires)]
carrier sense multiple access (MAC PROTOCOL) [Listens for WIFI signals and only transmits when no one else it]

PHYSICAL LAYER - Responsible for converting the ones and zeros that represent data in a computer into a transmittable form. 
(Examples of transmitting pulses of light, radio or electric signals, or sound)

WIRESHARK - Important to run in root privledges so it has unrestricted access to computer's interfaces.

eth0 interface (network interface)
wlan (wifi traffic)
Loopback: lo (Virtual network interface called the loopback interface, which redirects traffic back to the machine itself.

ifconfig eth0 (shows the information of the eth0 interface) [Wired connection]

wireshark filters

ip.dst == 192.168.1.100 (Filters traffic for 192.168.1.100 in the destination field)

[Protocol].[header/field] [operator: +,==,!=] [value]

[Protocol] - (TCP and IP)
[header/field] - (src or dst)
[operator] - (+, ==, !=)
[value] - (IP Address)

Wireshark allows you to filter packets based on their content. Example filter: tcp contains login

Adding the conversion filter of TCP:
ip.src == 192.168.1.100 || ip.dst == 192.168.1.100

When looking at the traffic even just one action is split into many packets if it is too large. The packets are then reassembled when they arrive.

Wireshark lets you reconstruct by right clicking on the traffic and follow -> TCP Stream [This shows the HTML of the page]

If you run an ARP Spoof it generates the traffic as if the victim machine created it.
